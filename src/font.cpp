// VT Font Maker
// Copyright (c) 2024 James Holderness
// Distributed under the MIT License

#include "font.h"

#include "vt.h"

constexpr auto font_10x16 = R"(0;2;1;10;0;2;16;0{ @
NNNNNNNNNN/??????????/??????????;
~~~~~~~~~~/~~~~~~~~~~/NNNNNNNNNN;;;;
?????????~/?????????~/GGGGGGGGGN;;;;
~~~~~~~~~~/~~~~~~~~~~/??????????;
~@@@@@@@@@/~?????????/N?????????;
??????????/??????????/GGGGGGGGGG;
@@@@@@@@@~/?????????~/?????????N;;;
??????????/??????????/MMMMMMMMMM;
??????????/oooooooooo/NNNNNNNNNN;
??????????/~~~~~~~~~~/NNNNNNNNNN;
wwwwwwwwww/~~~~~~~~~~/NNNNNNNNNN;
FFFFFFFFFF/??????????/??????????;
~~~~~~~~~~/??????????/??????????;
~~~~~~~~~~/NNNNNNNNNN/??????????;
~~~~~~~~~~/~~~~~~~~~~/@@@@@@@@@@;;;;;
@@@@@@@@@@/??????????/GGGGGGGGGG;;;
XTaCGXTaCG/eTGPaeTGPa/HDACGHDACG;
??????????/?????o{}~N/GKMENNNNN?;
___?_ooGG[/@_}~~~????/?NNNNNEEEE;
{{{wooWG??/??????????/EEE???????;
??????????/????__ooo_/?KA@@@@@@@;
BFKG~~~~~?/_??_~~~^N?/BBFEEEAAA@;
?~~~~~????/o~~^NB????/@?????????;;;;;;;;;;;;;;;;;;;;;
~?????????/~?????????/N?????????;;
?????????~/?????????~/?????????N;
~~~~~~~~~~/BBBBBBBBBB/??????????;
??????????/{{{{{{{{{{/NNNNNNNNNN;
~?????????/~?????????/NGGGGGGGGG;;;;;;;;;;;;;;;;;;;;;;
?????????~/??ACGCA??~/?????????N;;;;;;;;
@@@@@@@@@@/??????????/??????????
)";

soft_font::soft_font()
{
    auto font_data = std::string{font_10x16};
    // Some terminals (like RLogin) will not cope with DECDLD content
    // containing newlines, so we need to strip those out first.
    std::erase(font_data, '\n');
    vtout.dcs(font_data);
    // Designate the soft font as G1.
    vtout.scs(1, " @");
}

soft_font::~soft_font()
{
    // Make sure the ASCII character set is restored on exit.
    vtout.scs(1, "B");
    // Also erase the font buffers on exit.
    vtout.dcs("0;0;2{ @");
}
